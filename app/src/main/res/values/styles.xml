<?xml version="1.0" encoding="utf-8"?>
<resources>

    <!--
        ======================================================================
        ==                              应用主题                              ==
        ======================================================================
    -->

    <!--
        基础应用主题 (已迁移至 Material Components)
        我们选择 .Bridge 版本以更好地兼容旧项目的属性。
        .NoActionBar 表示我们自己处理 Toolbar/ActionBar。
    -->
    <style name="AppBaseTheme" parent="Theme.MaterialComponents.DayNight.NoActionBar.Bridge">
        <!--
            这里可以放置一些基础的、所有主题都会用到的自定义属性。
            例如，colorPrimary, colorAccent 等。
        -->
        <item name="colorPrimary">@color/theme_pink_primary</item>
        <item name="colorPrimaryDark">@color/theme_pink_primary</item>
        <item name="colorAccent">@color/theme_pink_secondary</item>
    </style>

    <!-- 主要的应用主题 -->
    <style name="AppTheme" parent="AppBaseTheme">
        <item name="android:windowBackground">@color/advance_setting_background</item>

        <!-- 沉浸式状态栏和导航栏 (API 21+ 会在 values-v21/styles.xml 中覆盖) -->
        <item name="android:statusBarColor">@android:color/transparent</item>
        <item name="android:navigationBarColor">@android:color/transparent</item>

        <!--
            为所有 MaterialAlertDialogBuilder 自动应用我们的自定义对话框样式。
            这样在 Java 代码中就不需要每次都传入主题了。
        -->
        <item name="materialAlertDialogTheme">@style/AppDialogStyle</item>
    </style>

    <!-- 用于视频流界面的主题，继承自 AppTheme 并设置透明背景 -->
    <style name="StreamTheme" parent="AppTheme">
        <item name="android:windowBackground">@android:color/transparent</item>
    </style>


    <!--
        ======================================================================
        ==                           Preference (设置界面) 样式                 ==
        ======================================================================
    -->

    <style name="PreferenceThemeWithShadow" parent="AppTheme">
        <item name="android:textViewStyle">@style/PreferenceTextWithShadow</item>
        <!-- 注意：PreferenceScreen 的标题和摘要样式需要通过 preferenceTheme 属性在 Activity 的主题中设置 -->
    </style>

    <style name="PreferenceTextWithShadow">
        <item name="android:textColor">@android:color/white</item>
        <item name="android:shadowColor">#88000000</item>
        <item name="android:shadowDx">1</item>
        <item name="android:shadowDy">1</item>
        <item name="android:shadowRadius">3</item>
        <item name="android:letterSpacing">0.03</item>
    </style>

    <style name="PreferenceTitleWithShadow" parent="PreferenceTextWithShadow">
        <item name="android:textSize">18sp</item>
        <item name="android:textStyle">bold</item>
        <item name="android:textColor">@android:color/white</item>
    </style>

    <style name="PreferenceSummaryWithShadow" parent="PreferenceTextWithShadow">
        <item name="android:textSize">14sp</item>
        <item name="android:textColor">@color/theme_pink_light</item>
    </style>

    <style name="PreferenceCategoryWithShadow" parent="PreferenceTextWithShadow">
        <item name="android:textSize">20sp</item>
        <item name="android:textStyle">bold</item>
        <item name="android:textColor">@color/theme_pink_secondary</item>
        <item name="android:shadowColor">#AA000000</item>
        <item name="android:shadowRadius">5</item>
    </style>


    <!--
        ======================================================================
        ==                          对话框 (Dialog) 样式                      ==
        ======================================================================
    -->

    <!-- 通用弹窗基础样式 (已迁移至 Material Components) -->
    <style name="BaseDialogStyle" parent="Theme.MaterialComponents.DayNight.Dialog.Alert">
        <item name="android:windowBackground">@drawable/game_menu_dialog_bg</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowAnimationStyle">@style/AppDialogAnimation</item>
        <item name="android:windowSoftInputMode">adjustResize</item>
        <!-- 控件和文本颜色 -->
        <item name="colorPrimary">@color/theme_pink_primary</item>
        <item name="colorSecondary">@color/theme_pink_secondary</item>
        <item name="android:textColorPrimary">@color/theme_pink_primary</item>
        <item name="android:textColorSecondary">@color/game_menu_text_secondary</item>
        <!-- 按钮样式 -->
        <item name="buttonBarPositiveButtonStyle">@style/AppDialogButtonStyle</item>
        <item name="buttonBarNegativeButtonStyle">@style/AppDialogButtonStyle</item>
    </style>

    <!-- GameMenu 专用对话框样式，继承自通用样式并自定义宽度 -->
    <style name="GameMenuDialogStyle" parent="BaseDialogStyle">
        <item name="android:windowMinWidthMajor">576dp</item>
        <item name="android:windowMinWidthMinor">90%</item>
    </style>

    <!-- App 通用对话框样式 -->
    <style name="AppDialogStyle" parent="BaseDialogStyle">
        <item name="android:windowMinWidthMajor">80%</item>
        <item name="android:windowMinWidthMinor">90%</item>
    </style>

    <!-- 进度对话框样式 -->
    <style name="AppProgressDialogStyle" parent="Theme.MaterialComponents.DayNight.Dialog">
        <item name="android:windowBackground">@drawable/game_menu_dialog_bg</item>
        <item name="android:windowMinWidthMajor">50%</item>
        <item name="android:windowMinWidthMinor">80%</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowAnimationStyle">@style/AppDialogAnimation</item>
        <item name="android:textColorPrimary">@color/theme_pink_primary</item>
        <item name="colorAccent">@color/theme_pink_primary</item>
        <item name="android:progressTint">@color/theme_pink_primary</item>
        <item name="android:indeterminateTint">@color/theme_pink_primary</item>
        <item name="android:indeterminateDrawable">@drawable/app_progress_indeterminate</item>
    </style>

    <!-- 对话框动画 -->
    <style name="AppDialogAnimation">
        <item name="android:windowEnterAnimation">@anim/game_menu_dialog_enter</item>
        <item name="android:windowExitAnimation">@anim/game_menu_dialog_exit</item>
    </style>


    <!--
        ======================================================================
        ==                         控件 (Widget) 样式                         ==
        ======================================================================
    -->

    <!-- GameMenu 按钮样式 -->
    <style name="GameMenuButtonStyle" parent="Widget.AppCompat.Button.Borderless">
        <item name="android:background">@drawable/game_menu_button_bg</item>
        <item name="android:textColor">@color/game_menu_text_primary</item>
        <item name="android:textSize">14sp</item>
        <item name="android:textStyle">bold</item>
        <item name="android:paddingLeft">6dp</item>
        <item name="android:paddingRight">6dp</item>
        <item name="android:minHeight">36dp</item>
        <item name="android:gravity">center</item>
        <item name="android:drawablePadding">4dp</item>
    </style>

    <!-- App 通用对话框按钮样式 -->
    <style name="AppDialogButtonStyle" parent="Widget.MaterialComponents.Button.TextButton.Dialog">
        <item name="android:background">@drawable/game_menu_button_bg</item>
        <item name="android:textColor">@color/theme_pink_primary</item>
        <item name="android:textSize">14sp</item>
        <item name="android:textStyle">bold</item>
    </style>

    <!-- GameMenu 列表项样式 (通常在 Adapter 的 getView 中设置) -->
    <style name="GameMenuListItemStyle">
        <item name="android:background">@drawable/game_menu_list_item_bg</item>
        <item name="android:textColor">@color/game_menu_text_primary</item>
        <item name="android:textSize">14sp</item>
        <item name="android:padding">16dp</item>
        <item name="android:minHeight">56dp</item>
        <item name="android:gravity">center_vertical</item>
    </style>

    <!-- 虚拟键盘按键样式 -->
    <style name="KeyboardKeyStyle">
        <item name="android:background">@drawable/square_border</item>
        <item name="android:textSize">14sp</item>
        <item name="android:textColor">#B3FFFFFF</item>
        <item name="android:gravity">center</item>
    </style>

</resources>